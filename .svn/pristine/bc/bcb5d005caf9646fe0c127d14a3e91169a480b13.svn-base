import React from 'react';
import ReactDom from 'react-dom';
import $ from 'jquery';
var RB = require('react-bootstrap');

import MessagesBoxComp from './MessagesBoxComp';
import LoadingComp from './LoadingComp';
var Select = require('react-select');

export default React.createClass({ //GroupInvitationComp

	getInitialState: function() {
		this.userIdsArr = '';
		return {
			loading: false
		}
	},

	handleSubmit: function(e) {
		e.preventDefault();
		console.log(this.userIdsArr.split(','));

		if (!this.userIdsArr) {
			alert('Select some users to invite!');
			return;
		}

		var url = VOICE.linkPrefix('api/groups/invitePeopleToGroup');
		this.setState({
			loading: true
		});

		var dataToSend = {
			userIds: this.userIdsArr,
			groupId: this.props.groupId
		}

		VOICE.ajaxCall(url, 'POST', dataToSend, this, this.cbHandleSendInvitations);
	},

	cbHandleSendInvitations: function(result) {
		if(result.inviteOk === true) {
			// if successully sent
			this.refs.msgBox.clearErrors();
			this.refs.msgBox.addSuccess('Your invitations were sent successully!', false);
			setTimeout(this.refs.msgBox.clearSuccesses, 3000);
		}
		else {
			this.refs.msgBox.addError(result.errors);
		}
		this.setState({
			loading: false
		});
	},

	handleOnChange: function(value) {
		console.log('CHANGING: ', value);
		this.userIdsArr = value;
	},

	renderOption: function(option) {
		var avatarImg;
		var avatarUrl = '';
		console.log('OPTION: ', option, this.props.isType);
		if(this.props.isType === 'PRS') {
			avatarImg = option.avatarImg || '$profile_none.png';
			avatarUrl = VOICE.imgPrefix(avatarImg, 'T');
		}

		else if(this.props.isType === 'ORG') {
			avatarImg = option.avatarImg || '$no_image_available.jpg';
			if(avatarImg !== '$no_image_available.jpg') {
				avatarUrl = avatarImg;
			}
			else {
				avatarUrl = VOICE.imgPrefix(avatarImg, 'T');
			}
		}

		else if(this.props.isType === 'DIS' || this.props.isType === 'TEA') {
			avatarImg = option.avatarImg || '$no_image_available.jpg';
			avatarUrl = VOICE.imgPrefix(avatarImg, 'T');
		}
		
		return (
			<span>
				{
					this.props.isType !== 'SKL' && this.props.isType !== 'TAG' ?
						<span><img src={avatarUrl} className="searchResultImg" /> <p style={this.props.optionStyle} className="searchResultSubtitle" >{option.label}</p></span> :
						<p style={this.props.optionStyle} className="searchResultSubtitle" >{option.label}</p>
				}
			</span>
		);
	},
  
	render: function() {

		var self = this;
		var getOptions = function(input, callback) {
			if ( input.length < self.props.minCharsForSearching ) { return; }
			VOICE.ajaxCall(self.props.url, 'GET', { input: input }, this, function(result) {
				console.log(result);
				callback(null, {
		            options: result,
		            complete: true
		        });
			});
		};

		return (
			<span>
				{
					this.state.loading === false ?
						<span>
							<br/>
							<div className="panel panel-default">
								<div className="panel-heading">
									Invite VOICE Users
								</div>
								<div className="panel-body">
									<Select
										className="groupInvitationSelect"
										asyncOptions={getOptions}
				    					autoload={this.props.autoload}
				    					cacheAsyncResults={false}
										multi={true}
										valueRenderer={this.getAutoCompleteLabel}
									    filterOption={this.filterOption}
									    optionRenderer={this.renderOption}
									    placeholder="Search Users...."
									    onChange={this.handleOnChange} >
									</Select>
									<div className="row">
										<center>
											<button type="button" className="btn btn-success" onClick={this.handleSubmit}>Send Join Requests</button>
										</center>
									</div>
								  </div>
							</div><br/>
						</span> :
						<LoadingComp loadingText="Sending Invitations..."></LoadingComp>
				}<br/>
				<MessagesBoxComp ref="msgBox"/>
			</span>
		);
	},

	filterOption: function(option, filter) {
		return option;
	}
});	// GroupInvitationComp