ALTER VIEW v_person_profile_addresses
AS
SELECT prof.id PROF_id,
       prof.firstName PROF_firstName,
       prof.lastName PROF_lastName,
       prof.middleName PROF_middleName,
       prof.email PROF_email,
       adrgen.id id,
       adrgen.isDeleted ADRGEN_isDeleted,
       adrgen.createdDateTime ADRGEN_createdDateTime,
       adrgen.areaId ADRGEN_areaId,
       adrgen.addressText addressText,
       adrgen.fromYear fromYear,
       adrgen.toYear toYear,
       adrgen.addressTypeDVId addressTypeDVId,
       area.id areaId,
       area.isDeleted AREA_isDeleted,
       area.name areaText,
       area.isoCode2 AREA_isoCode2,
       area.isoCode3 AREA_isoCode3,
       area.synonyms AREA_synonyms,
       area.areaType AREA_areaType,
       area.createdDateTime AREA_createdDateTime,
       vdv.SDOMVAL_domainValueCode addressType,
	   dv.description addressTypeDesc
FROM
  `person_profiles` `prof`,
  `address_generic` `adrgen`,
  `areas` `area`,
  `__v_domain_values` `vdv`,
  `__domain_values` `dv`
WHERE 
  `adrgen`.`genericType` = 'PRS'
  AND `adrgen`.`genericId` = `prof`.`id`
  AND `area`.`id` = `adrgen`.`areaId`
  AND `vdv`.`SDOMVAL_id` = `adrgen`.`addressTypeDVId`
  AND `dv`.`id` = `vdv`.`SDOMVAL_id`
;

/* 
    SELECT `PROF_lastName`, `addressType`, `addressText`, `areaText` FROM `v_person_profile_addresses`
*/


alter view __v_domain_values as 
select
  sdom.id SDOM_id, sdom.isDeleted SDOM_isDeleted, sdom.code SDOM_code, sdom.description SDOM_description, 
  sdomval.id SDOMVAL_id, sdomval.isDeleted SDOMVAL_isDeleted, sdomval.active SDOMVAL_active, sdomval.domainValueCode SDOMVAL_domainValueCode
from 
  __domains sdom, 
  __domain_values sdomval
where
    sdomval.domainId = sdom.id
;

/*
    SELECT `SDOM_id`, `SDOM_code`, `SDOMVAL_id`, `SDOMVAL_domainValueCode` FROM `v_sys_domain_values`
*/


alter view v_voice_persons as 
select
  vus.id VUS_id, vus.isDeleted VUS_isDeleted, vus.username VUS_username, vus.systemComments VUS_systemComments, vus.isActive VUS_isActive, vus.isVerified VUS_isVerified, vus.verificationToken VUS_verificationToken, vus.organisationId VUS_organisationId, vus.isOrganisationAdmin VUS_isOrganisationAdmin, vus.createdDateTime VUS_createdDateTime, vus.updatedDateTime VUS_updatedDateTime, vus.stakeholderDVId VUS_stakeholderDVId, vus.userId VUS_userId, vus.personProfileId VUS_personProfileId, vus.avatarImg VUS_avatarImg, 
  org.id ORG_id, org.isDeleted ORG_isDeleted, org.active ORG_active, org.name ORG_name, org.shortName ORG_shortName, org.logoImage ORG_logoImage, org.orgURL ORG_orgURL, org.orgDomain ORG_orgDomain, org.description ORG_description, org.longDescription ORG_longDescription, org.createdDateTime ORG_createdDateTime, org.updatedDateTime ORG_updatedDateTime, org.orgTypeDVId ORG_orgTypeDVId, org.legalFormDVId ORG_legalFormDVId, org.stakeholderDVId ORG_stakeholderDVId, org.stakeholderSegmentDVId ORG_stakeholderSegmentDVId, org.acceptEmailsForAdmin ORG_acceptEmailsForAdmin, org.partOfOrganisationId ORG_partOfOrganisationId, 
  prof.id PROF_id, prof.isDeleted PROF_isDeleted, prof.createdDateTime PROF_createdDateTime, prof.firstName PROF_firstName, prof.lastName PROF_lastName, prof.middleName PROF_middleName, prof.email PROF_email, prof.birthYear PROF_birthYear, prof.gender PROF_gender, prof.cvFile PROF_cvFile, prof.updatedDateTime PROF_updatedDateTime,
  dvStakeholder.domainValueCode VUS_stakeholderCode, dvStakeholder.description VUS_stakeholderText
from 
  voice_users vus left outer join __domain_values dvStakeholder on dvStakeholder.id = vus.stakeholderDVId, 
  organisations org, 
  person_profiles prof
where
	org.id = vus.organisationId and
	prof.id = vus.personProfileId
;

/*
SELECT `VUS_id`, `PROF_lastName`, `PROF_firstName`, `VUS_stakeholderText`, `ORG_name`, `PROF_birthYear`
FROM `v_voice_persons`

*/