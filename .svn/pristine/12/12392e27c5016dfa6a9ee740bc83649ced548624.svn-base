import React from 'react';
import ReactDom from 'react-dom';
var moment = require('moment');

import MessagesBoxComp from './MessagesBoxComp';
import LoadingComp from './LoadingComp';
var RB = require('react-bootstrap');

export default React.createClass({ //ContentAuthorsComp

	/*
		Properties
		1. contentId | 
		2. data (result of VO_Content::getContent())
	*/

	getDefaultProps: function() {
		return {
			data: {},
			contentId: '',
			editable: false
		};
	},

	getInitialState: function() {
		return { 
			data: {},
			loading: false
		}
	},

	componentDidMount: function() {
		if(Object.keys(this.props.data).length === 0) {
			var data = {
				id: this.props.contentId
			};
			VOICE.ajaxCall(VOICE.linkPrefix('api/contents/getContent'), 'POST', data, this, this.handleGetContent);
			return {
				loading: false,
				data: {}
			}	
		}
		else {
			return {
				loading: false,
				data: this.props.data
			}
		}
		
	},

	handleGetContent: function(result) {
		console.log('handleGetContent: ', result);
		if(result.getContentOk)
		this.setState({
			data: result.getContent.authors
		});
	},

	handleSave: function() {
	    
	},

	cbHandleSave: function(result) {
		if(result.ideaEditedOk === true) {
  		
			this.refs.msgBox.clearErrors();
			this.refs.msgBox.addSuccess('Your content authors were saved successully!', false);
			setTimeout(this.refs.msgBox.clearSuccesses, 3000);
		}
		else {
			this.refs.msgBox.addError(result.errors);
		}
		this.setState({
	      loading: false
	    });
	},

    render: function() {
	  	var results = this.props.data;
	  	console.log('CONTENT AUTHORS: ', results);
		//var memberSince = moment.utc(result.IDE_effectiveDate, 'YYYYMMDDhhmmss').fromNow();
	  	return (
			<div classNameName="container">
				<RB.Row>
					{
						results.map(function(result) {
							return (
								<Author key={result.id} result={result}></Author>
							);
						})
					}
				</RB.Row>
				<RB.Row>
					{
						this.props.editable === true ?
				            <center>
				            	{
				           			this.state.loading === false ?
				              			<RB.Button bsStyle="success" onClick={this.handleSave}><i className="glyphicon glyphicon-ok-sign"></i> Save Authors</RB.Button> :
				              			<LoadingComp loadingText="Saving Authors..."></LoadingComp>
				         	    }
				            </center> : null
		           }
				</RB.Row><br/>
				<RB.Row>
					<RB.Col md={12}>
						<MessagesBoxComp ref="msgBox"/>
					</RB.Col>
				</RB.Row>
			</div>
	    );
    }
}); //ContentAuthorsComp

var Author = React.createClass({
	render: function() {
		var data = this.props.result;
		return (
			<span>
				<img src={data.logoURL} />
				<span> {data.name}</span>
				<span> {data.email}</span>
				<a href={data.webURL}> {data.webURL}</a>
				<br/><br/>
			</span>
		);
	}
});

