<?php

class VO_Tags {
	const _ECP = 'TAG';	// Error Code Prefix
	
	/***************************************************************************/
	//
	/***************************************************************************/
	
	public static
	function search( WOOOF $wo, $input, $categoryType, $matchMode='STD', $data='FULL', $maxRows=100 )
	{
		$maxRows = (int) $maxRows;
	
		$delimiters =  ' .,-';
		$tok = strtok($input, $delimiters);
		$searchFT = '';
		while ($tok !== false) {
			$searchFT .= '+'.$tok.'* ';
			$tok = strtok($delimiters);
		}
		
		$sql =  "select id value, concat(tagPhrase, ' [', categoryType, ']' ) label ";
		$sql .=	"from tags ";
		$sql .= "where match(tagPhrase) against('{$searchFT}' IN BOOLEAN MODE) and isDeleted='0' ";
		if ($wo->hasContent($categoryType)) {
			$sql .= " and categoryType = '$categoryType' ";
		}
		$sql .= "order by tagPhrase ";
		$sql .= "limit $maxRows";
	
		$res = $wo->db->getResultByQuery($sql, true, false);
		if ( $res === FALSE ) { return FALSE; }
	
		$res = $wo->db->resultRows;
	
		$out = [];
		foreach( $res as $view ) {
			$out[] = [
				'value' => $view['value'],
				'label' => $view['label']
			];
		}
	
		return $out;
	}	// search
	
	/***************************************************************************/
	//
	/***************************************************************************/
	
	/**
	 *
	 * @param WOOOF $wo
	 * @return false | array
	 * Returns look ups for services in front end
	 */
	public static
	function getServicesLookup( WOOOF $wo )
	{
		$t1 = new WOOOF_dataBaseTable($wo->db, 'tags');
		if ( !$t1->constructedOk ) { return false; }
		$out = [];
		$res = $t1->getResult(
			['categoryType' => 'SRV'],
			'tagPhrase', '', '', '', true, false
		);
		if ( $res === FALSE ) { return false; }
	
		if ( $res['totalRows'] != 0 ) {
			foreach($t1->resultRows as $service) {
				$out[] = [
					'value' => $service['id'],
					'label' => $service['tagPhrase']
				];
			}
		}
	
		return $out;
	
	} // getServicesLookup
	
		/***************************************************************************/
	//
	/***************************************************************************/
	
	public static
	function searchTagsAndAreas( WOOOF $wo, $input, $data='FULL', $maxRows=100 )
	{
		$maxRows = (int) $maxRows;

		$delimiters =  ' .,-';
		$tok = strtok($input, $delimiters);
		$searchFT = '';
		while ($tok !== false) {
			$searchFT .= '+'.$tok.'* ';
			$tok = strtok($delimiters);
		}
		
		$sql =  "select concat('TAG_',id) value, concat(tagPhrase, ' [', categoryType, ']' ) label ";
		$sql .=	"from tags ";
		$sql .= "where match(tagPhrase) against('{$searchFT}' IN BOOLEAN MODE) and isDeleted='0' ";
		
		$sql .= 'UNION ALL ';
		$sql .=  "select concat('ARE_',id), concat(name, ' [AREA]')  ";
		$sql .=	"from areas ";
		$sql .= "where match(name) against('{$searchFT}' IN BOOLEAN MODE) and isDeleted='0' ";
		
		
		$sql .= "order by 2 ";
		$sql .= "limit $maxRows";
	
		$res = $wo->db->getResultByQuery($sql, true, false);
		if ( $res === FALSE ) { return FALSE; }
	
		$res = $wo->db->resultRows;
	
		$out = [];
		foreach( $res as $view ) {
			$out[] = [
				'value' => $view['value'],
				'label' => $view['label']
			];
		}
	
		return $out;
	}	// searchAll
	
}	// VO_Tags