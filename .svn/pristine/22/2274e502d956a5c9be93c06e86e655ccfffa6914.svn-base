import React from 'react';
import ReactDom from 'react-dom';
var RB = require('react-bootstrap');
import $ from 'jquery';

import MessagesBoxComp from './MessagesBoxComp';

export default React.createClass({ //GroupJoinRequestsComp

  getInitialState: function() {
    return {
      requests: this.props.requests,
      visibility: true
  	};
  },

  acceptJoinReq: function(urlString) {
    var url = VOICE.linkPrefix(urlString);
    VOICE.ajaxCall(url, 'POST', {}, this, this.cbHandleAcc);
  },

  cbHandleAcc: function(result) {
    console.log(result);
    if(result.answerRequestJoinOk) {
      this.refs.msgBox.clearErrors();
      this.refs.msgBox.addSuccess('Request approved successfully!', false);
      setTimeout(this.refs.msgBox.clearSuccesses, 3000);
      this.setState({
        visibility: false
      });

      this.props.onActionClicked(this.state.visibility);
    }

    else {
      this.refs.msgBox.addError(result.errors);
      setTimeout(this.refs.msgBox.clearErrors, 5000);
    }
  },

  rejectJoinReq: function(urlString) {
    var url = VOICE.linkPrefix(urlString);
    VOICE.ajaxCall(url, 'POST', {}, this, this.cbHandleRej);
  },

  cbHandleRej: function(result) {
    console.log(result);
    if(result.answerRequestJoinOk) {
      this.refs.msgBox.clearErrors();
      this.refs.msgBox.addSuccess('Request rejected!', false);
      setTimeout(this.refs.msgBox.clearSuccesses, 3000);
      this.setState({
        visibility: false
      });

      this.props.onActionClicked(this.state.visibility);
    }

    else {
      this.refs.msgBox.addError(result.errors);
      setTimeout(this.refs.msgBox.clearErrors, 5000);
    }
  },

  refreshData: function(result) {
    console.log('AFTER SUCCESS RESULT: ', result);
    var connections;
    if(result.getMembershipsOk) {
      connections = result.getMemberships[0];
    }
    else {
      connections = result.getConnections[0];
    }
    
    this.setState({
      connections: connections
    });
  },

  render: function() {
     var req = this.state.requests;
     console.log('Rendering with REQUESTS: ', req);

     var cbAcceptJoin = this.acceptJoinReq.bind(null, req.acceptJoinRequest);
     var cbRejectJoin = this.rejectJoinReq.bind(null, req.rejectJoinRequest);
     
     return (
        <span>
            { 
              this.state.visibility === true ?
              <span>
                <button type="button" className="btn btn-default btn-sm btn-link" 
                  onClick={cbAcceptJoin}>
                    <span><i className="fa fa-check fa-lg"></i> Accept Join Request</span>
                </button>
                <button type="button" className="btn btn-default btn-sm btn-link" 
                  onClick={cbRejectJoin}>
                    <span><i className="fa fa-times fa-lg"></i> Reject Join Request</span>
                </button>
              </span> :null
            }
            <br/><br/>
            <MessagesBoxComp ref="msgBox"/>
        </span>
      );
  }
}); //GroupJoinRequestsComp