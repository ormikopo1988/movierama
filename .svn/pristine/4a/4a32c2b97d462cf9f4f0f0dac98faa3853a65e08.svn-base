import React from 'react';
import ReactDom from 'react-dom';
var RB = require('react-bootstrap');
import $ from 'jquery';

import MessagesBoxComp from './MessagesBoxComp';
import YearInputComp from './YearInputComp';
import LoadingComp from './LoadingComp';

export default React.createClass({ //CreateGroupForm

  getInitialState: function() {
    
    console.log(this.props.data);
    
    return {
      groupType: '0',
      loading: false
  	};
  },

  handleSave: function() {
    var title = this.refs.title.getValue().trim() || '';
    var description = this.refs.description.getValue().trim() || '';
    var comments = this.refs.comments.getValue().trim() || '';
    var groupType = this.refs.groupType.getValue() || '';

    if(!title || !groupType) {
      alert('You must fill all the required input fields!');
      return;
    }

    var isPrivate;
    var isFreeToFollow;
    var isOpenForPosts;
    if(this.state.groupType === 'D') {
      isPrivate = this.refs.isPrivate.getValue() || '0';
      isFreeToFollow = this.refs.isFreeToFollow.getValue() || '1';
      isOpenForPosts = this.refs.isOpenForPosts.getValue() || '1';
    }
    else if(this.state.groupType === 'T') {
      isPrivate = '1';
      isFreeToFollow = '0';
      isOpenForPosts = '0';
    }
    else {
      isPrivate = '0';
      isFreeToFollow = '1';
      isOpenForPosts = '1';
    }
    
    var data = {
      title: title,
      description: description,
      comments: comments,
      groupType: groupType,
      isPrivate: isPrivate,
      isFreeToFollow: isFreeToFollow,
      isOpenForPosts: isOpenForPosts
    }

    var url = VOICE.linkPrefix('api/groups/createGroup');
    //data to send to server!
    this.setState({
      loading: true
    });
    VOICE.ajaxCall(url, 'POST', data, this, this.cbHandleSave);
  },

  cbHandleSave: function(result) {
    if(result.groupCreatedOk === true) {
      this.refs.msgBox.clearErrors();
      this.refs.msgBox.addSuccess('Your group was created successully!', false);
      setTimeout(this.refs.msgBox.clearSuccesses, 3000);
    }
    else {
      this.refs.msgBox.addError(result.errors);
    }
    this.setState({
      loading: false
    });
  },

  handleChange: function(event) {
    var type = this.refs.groupType.getValue();

    if(type === '') {
      type = '0';
    }
    else if(type === 'TEA') {
      type = 'T';
    }
    else if(type === 'DIS') {
      type = 'D'
    }

    this.setState({
      groupType: type
    });
  },

  render: function() {
      return (
        <RB.Well>
          <center><h3>Create Group</h3></center><hr/>
          <RB.Row>
            <RB.Col md={12}>
              <RB.Input type="text" addonBefore="Title (*)" placeholder="Title..." ref="title" name="title" />
            </RB.Col>
          </RB.Row>
          <RB.Row>
            <RB.Col md={6}>
              <RB.Input rows={4} type="textarea" addonBefore="Description" placeholder="Description..." ref="description" name="description" />
            </RB.Col>
            <RB.Col md={6}>
              <RB.Input rows={4} type="textarea" addonBefore="Comments" placeholder="Comments..." ref="comments" name="comments" />
            </RB.Col>
          </RB.Row><br/>
          <RB.Row>
            <RB.Col md={12}>
              <RB.Input type="select" addonBefore="Group Type (*)" placeholder="Select Group Type" ref="groupType" name="groupType" onChange={this.handleChange} >
                <option value=""> - Select Group Type - </option>
                <option value="DIS"> Discussion Group </option>
                <option value="TEA"> Team Group </option>
              </RB.Input>
            </RB.Col>
          </RB.Row><br/>
          {
            this.state.groupType === '0' ? null :
            this.state.groupType === 'T' ? null :
            this.state.groupType === 'D' ?
              <span>
                <RB.Row>
                  <RB.Col md={4}>
                    <RB.Input type="select" addonBefore="Visibility" ref="isPrivate" name="isPrivate" >
                      <option value="0"> Public </option>
                      <option value="1"> Private </option>
                    </RB.Input>
                  </RB.Col>
                  <RB.Col md={4}>
                    <RB.Input type="select" addonBefore="Is Free to Follow" ref="isFreeToFollow" name="isFreeToFollow" >
                      <option value="1"> Yes </option>
                      <option value="0"> No </option>
                    </RB.Input>
                  </RB.Col>
                  <RB.Col md={4}>
                    <RB.Input type="select" addonBefore="Is Open for Posts" ref="isOpenForPosts" name="isOpenForPosts" >
                      <option value="1"> Yes </option>
                      <option value="0"> No </option>
                    </RB.Input>
                  </RB.Col>
                </RB.Row><br/>
              </span>
              : null
          }
          <RB.Row>
            <center>
              {
                this.state.loading === false ?
                  <RB.Button bsStyle="success" onClick={this.handleSave}><i className="glyphicon glyphicon-ok-sign"></i> Save</RB.Button> :
                  <LoadingComp loadingText="Creating Group..."></LoadingComp>
              }
            </center>
          </RB.Row><br/>
          <RB.Row>
            <RB.Col md={12}>
              <MessagesBoxComp ref="msgBox"/>
            </RB.Col>
          </RB.Row>
        </RB.Well>
      );
  }
}); //CreateGroupForm