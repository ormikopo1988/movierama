import React from 'react';
import ReactDom from 'react-dom';
import $ from 'jquery';
var RB = require('react-bootstrap');
var moment = require('moment');

import SocialActionsComp from './SocialActionsComp';
import BookmarkComp from './BookmarkComp';
import PostBoxComp from './PostBoxComp';

export default React.createClass({ //organisationView
  getInitialState: function() {
  	return {
		data: {
    	   main : this.props.data.main,
    	   addresses : this.props.data.addresses,
    	   services: this.props.data.services,
    	   socialAccounts: this.props.data.socialAccounts,
    	   tags: this.props.data.tags,
    	   connections: this.props.data.connections[0]
    	}
    };
  },
  
  render: function() { //function that returns a tree of React components that will eventually render to HTML
    return (
      <div className="profileBox">
      	<Main data={this.state.data} lookUps={this.props.lookUps} />
      </div>
    );
  }
  
});

var Main = React.createClass({
  getInitialState: function() {
    return {
	  organisationView: this.props.data
    };
  },

  render: function() {
	var mainView = this.state.organisationView.main;
	var addressView = this.state.organisationView.addresses;
	var tagView = this.state.organisationView.tags;
	var accountView = this.state.organisationView.socialAccounts;
	var connectionView = this.state.organisationView.connections;

	var isAdmin = mainView.isAdminOfThisOrg || '0';
	
	var avatarImg = mainView.logoImage || mainView.logoURL || '$no_image_available.jpg';
	var avatarURL = '';
	if(avatarImg !== '$no_image_available.jpg') {
		if(avatarImg === mainView.logoImage) {
			avatarURL = VOICE.imgPrefix(mainView.logoImage, '');
		}
		else {
			avatarURL = avatarImg;
		}
	}
	else {
		avatarURL = VOICE.systemImgPrefix(avatarImg);
	}
	console.log('MAIN VIEW: ', mainView);
	var avatarDivStyle = {
		// TODO: Handle in css classes!!!
		backgroundSize: 'contain',
		backgroundImage: 'url(' + avatarURL + ')'
	};

	if(mainView.srvDesc) {
		var services=[];
		for(var i=0; i<mainView.srvDesc.length; i++) {
			services.push(
				<div className="endorse-item-name"><strong>{mainView.srvDesc[i]}</strong></div>
			);
		}
	}

	if(mainView.voiceRolesIds) {
		var roles=[];
		for(var i=0; i<mainView.rolesDesc.length; i++) {
			roles.push(
				<div className="endorse-item-name"><strong>{mainView.rolesDesc[i]}</strong></div>
			);
		}
	}

	var postBoxData = {
		postBoxId: mainView.postBox.id
	};

    return (
		<div className="container">
			<div className="well">
				<div className="row">
					<div className="col-sm-3 col-md-3 col-lg-2">
						<a href={avatarURL} target="_blank">
							<div className="circle" style={avatarDivStyle}></div>
						</a>
					</div>
			  		<div className="col-sm-9 col-md-9 col-lg-10 profile-name">
			  			<h1>{mainView.name + ' - ' + mainView.orgDomain}</h1>
			  			<b><i className="fa fa-sitemap"></i> Organisation URL: <a href={this.state.organisationView.main.orgURL} target="_blank">{this.state.organisationView.main.orgURL}</a></b>
						<SocialActionsComp targetType="ORG" followOnly={true} connections={connectionView} userId={connectionView.targetId}></SocialActionsComp>
						<BookmarkComp targetType="ORG" connections={connectionView} userId={connectionView.targetId}></BookmarkComp>
			  			{
			  				isAdmin === '1' ? 
			  					<b><a href={VOICE.linkPrefix('organisation/edit/'+mainView.organisationId)}><i className="fa fa-pencil"></i> Edit Profile</a></b> : null
			  			}
			  		</div>
			  	</div>
			  	<div className="row">
			  		<div className="col-sm-12 col-md-5 col-lg-6">
			  			<div className="panel panel-default">
		  					<div className="panel-heading"><i className="fa fa-cog"></i> Roles</div>
		  					<div className="panel-body">
		  						{roles}
							</div>
						</div>
				  		<div className="panel panel-default">
		  					<div className="panel-heading"><i className="fa fa-server"></i> Services</div>
		  					<div className="panel-body">
		  						{services}
							</div>
						</div>
					</div>
					<div className="col-sm-12 col-md-6 col-lg-5 col-md-offset-1 col-lg-offset-1">
			  			<div className="col-lg-offset-7 col-md-offset-5 col-sm-offset-3">
				  			<i className="fa fa-share-alt"></i> <a href={VOICE.linkPrefix('users/followers/'+mainView.organisationId)}>Followers</a><br/><br/>
			  				<i className="fa fa-comment"></i> <a href={VOICE.linkPrefix('timeline/'+mainView.postBox.id)}>See Timeline </a>
			  			</div>
			  		</div>
			    </div>
			</div>
		    <hr/>
		    <div className="row">
		  		<SideBar data={mainView} account={accountView} />
		    	<div className="col-sm-9">
		    		<div className="panel-heading">
			  			<ul className="nav nav-tabs" id="myTab2">
				             <li className="active"><a href="#timeline" data-toggle="tab">Timeline</a></li>
				             <li><a href="#about" data-toggle="tab">About</a></li>
				             <li><a href="#more" data-toggle="tab">More</a></li>
			            </ul>
		            </div>
		            <div className="tab-content panel-body">
						<div id="timeline" className="tab-pane active well well-sm well-agency">           
							<PostBoxComp data={postBoxData} lookUps={this.props.lookUps}></PostBoxComp>
						</div>
						<div id="about" className="tab-pane panel panel-default">
							<div className="panel-heading"><i className="fa fa-info-circle"></i> About</div>
							<div className="panel-body">
								<AboutMe data={mainView.description} />
							</div>
					    </div>
						<div id="more" className="tab-pane panel panel-default">
							<div className="panel-heading">
						    	<ul className="nav nav-tabs" id="myTab">
						             <li className="active"><a href="#addresses" data-toggle="tab">Addresses</a></li>
						             <li><a href="#tags" data-toggle="tab">Tags</a></li>
					            </ul>
				            </div>
						    <div className="tab-content panel-body">
					             <Addresses data={addressView}/>
					             <Tags data={tagView}/><br/>
				            </div>
						</div>
					</div>
			 	 </div>
			 </div>
		</div>
    );
  }
});

var SideBar = React.createClass({
	getInitialState: function() {
		var data = this.props.data;
		var account = this.props.account;
		return {
			data: data,
			account: account
		}
	},
	
	render: function() {
		var data = this.state.data;
		var account = this.state.account;
		
		var accounts = [];
		for(var i=0; i<account.length; i++) {
			var title = account[i].socialAccountDesc + ': ' + account[i].url;
			{
				(account[i].socialAccountDesc === 'Twitter' || account[i].socialAccountDesc === 'Facebook' || account[i].socialAccountDesc === 'LinkedIn') ? 
					accounts.push(
						<span>
							<a title={title} href={account[i].url} target="_blank"><i className={account[i].socialAccountIcon}></i></a>
						</span>
					) : 
				account[i].socialAccountDesc === 'GMail' ?
					accounts.push(
						<span>
							<a title={title} href={'mailTo:'+account[i].url} target="_blank"><i className={account[i].socialAccountIcon}></i></a>
						</span>
					) :
				account[i].socialAccountDesc === 'Mobile' ?
					accounts.push(
						<span>
							<a title={title} href={'tel:'+account[i].url} target="_blank"><i className={account[i].socialAccountIcon}></i></a>
						</span>
					) :
					accounts.push(
						<span>
							<a title={title} href={'tel:'+account[i].url} target="_blank"><i className={account[i].socialAccountIcon}></i></a>
						</span>
					)
			}
			/*accounts.push(
				<span>
					<a href={account[i].url} target="_blank"><i className={account[i].socialAccountIcon}></i></a>
				</span>
			);*/
		}


		var lastPostDateTime = '';
		if(data.postBox.lastPostDateTime) {
			lastPostDateTime = moment.utc(data.postBox.lastPostDateTime, 'YYYYMMDDhhmmss').fromNow();
		}

		return(
		<div className="col-sm-3">
			{/*<div className="panel panel-default">
				<div className="panel-heading"><i className="fa fa-user"></i> Profile</div>
				<div className="panel-body">
					{(data.middleName !== '' && data.middleName !== undefined) ? <li className="list-group-item text-right"><span className="pull-left"><strong>Middle Name</strong></span> {data.middleName}</li> : null}
					{(data.gender !== '' && data.gender !== '?') ? <li className="list-group-item text-right"><span className="pull-left"><strong>Gender</strong></span> {data.gender === 'M' ? <i className="fa fa-male"></i> : <i className="fa fa-female"></i> }</li> : null}
					{data.birthYear > 0 ? <li className="list-group-item text-right"><span className="pull-left"><strong>Birth Year</strong></span> {data.birthYear}</li> : null}
					{(data.title !== '' && data.title !== undefined) ? <li className="list-group-item text-right"><span className="pull-left"><strong>Title</strong></span> {data.personTitleDesc}</li> : null}
				</div>
			</div>*/}
			<div className="panel panel-default">
				<div className="panel-heading"><i className="fa fa-users"></i> Social Media</div>
				<div className="panel-body">
					<h3>{accounts}</h3>
				</div>
			</div>
			<div className="panel panel-default">
				<div className="panel-heading"><i className="fa fa-dashboard fa-1x"></i> Activity</div>
				<div className="panel-body">
					<li className="list-group-item text-right"><span className="pull-left"><strong>Posts</strong></span> {data.postBox.noOfPosts}</li>
					{
						lastPostDateTime !== '' ?
							<li className="list-group-item text-right">
								<span className="pull-left">
									<strong>Last Post</strong>
								</span> {lastPostDateTime}
							</li> : null
					}
				</div>
			</div>
		</div>
		);
	}
});

var Addresses = React.createClass({
	getInitialState: function() {
		var addresses = this.props.data.list;
		return {
			addresses: addresses
		}
	},
	
	render: function() {
		var tds = [];
		var addresses = this.state.addresses;
		for(var i=0; i < addresses.length; i++ ) {
			var fromYear = addresses[i].fromYear !== '0' ? addresses[i].fromYear : '';
			var toYear = addresses[i].toYear !== '0' ? addresses[i].toYear : '';
			tds.push(
				<tr>
					<td>{addresses[i].addressTypeDesc}</td>
					<td>{addresses[i].addressText}</td>
					<td>{addresses[i].areaText}</td>
					<td>{fromYear}</td>
					<td>{toYear}</td>
				</tr>
			);
		}
		return(
			<div className="tab-pane active" id="addresses">
			  <div className="table-responsive">
			    <table className="table table-hover">
			      <thead>
			        <tr>
			          <th>Address Type</th>
			          <th>Address Text</th>
			          <th>Area</th>
			          <th>From Date</th>
			          <th>To Date</th>
			        </tr>
			      </thead>
			      <tbody id="items">
			        {tds}
			      </tbody>
			    </table>
			    {/*<div className="row">
			      <div className="col-md-4 col-md-offset-4 text-center">
			      	<ul className="pagination" id="myPager"></ul>
			      </div>
			    </div>*/}
			  </div>
			</div>
		);
	}
});

var AboutMe = React.createClass({
	render: function() {
		return (
			<p><i>{this.props.data}</i></p> 
		);
	}
});

var Tags = React.createClass({
	getInitialState: function() {
		var tags = this.props.data;
		return {
			tags: tags
		}
	},
	
	render: function() {
		var spans = [];
		var styleClass = '';
		for(var i=0; i<this.state.tags.length;i++) {
			spans.push(
				<span className="endorse-item-name">
					<span className="endorse-item-name-text"><i className="fa fa-tag"></i> {this.state.tags[i].name}</span>
				</span>
			);
		}
		return (
			 <div className="tab-pane col-sm-12" id="tags">
          	    {spans}
             </div>
		);
	}
});